{"ast":null,"code":"import axio from \"axios\";\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axio.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axio.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const details = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axio.post(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["axio","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name","details","id","getState","userLogin","userInfo","Authorization","token"],"sources":["C:/A-Mart/frontend/src/actions/userActions.js"],"sourcesContent":["import axio from \"axios\";\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n  \r\n    USER_LOGOUT,\r\n  \r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n  \r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n  } from \"../constants/userConstants\";\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axio.post('/api/users/login/',\r\n        {'username': email, 'password':password}, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axio.post('/api/users/register/',\r\n        {'name': name, 'email': email, 'password':password}, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: {}\r\n        })\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const details = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axio.post(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}