[{"C:\\A-Mart\\backend\\frontend\\src\\index.js":"1","C:\\A-Mart\\backend\\frontend\\src\\store.js":"2","C:\\A-Mart\\backend\\frontend\\src\\reportWebVitals.js":"3","C:\\A-Mart\\backend\\frontend\\src\\App.js":"4","C:\\A-Mart\\backend\\frontend\\src\\reducers\\orderReducers.js":"5","C:\\A-Mart\\backend\\frontend\\src\\reducers\\cartReducers.js":"6","C:\\A-Mart\\backend\\frontend\\src\\reducers\\userReducers.js":"7","C:\\A-Mart\\backend\\frontend\\src\\components\\Footer.js":"8","C:\\A-Mart\\backend\\frontend\\src\\components\\Header.js":"9","C:\\A-Mart\\backend\\frontend\\src\\reducers\\productReducers.js":"10","C:\\A-Mart\\backend\\frontend\\src\\screens\\HomeScreen.js":"11","C:\\A-Mart\\backend\\frontend\\src\\screens\\LoginScreen.js":"12","C:\\A-Mart\\backend\\frontend\\src\\screens\\CartScreen.js":"13","C:\\A-Mart\\backend\\frontend\\src\\screens\\RegisterScreen.js":"14","C:\\A-Mart\\backend\\frontend\\src\\screens\\ProductScreen.js":"15","C:\\A-Mart\\backend\\frontend\\src\\screens\\PaymentScreen.js":"16","C:\\A-Mart\\backend\\frontend\\src\\screens\\ProfileScreen.js":"17","C:\\A-Mart\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js":"18","C:\\A-Mart\\backend\\frontend\\src\\screens\\UserListScreen.js":"19","C:\\A-Mart\\backend\\frontend\\src\\screens\\OrderScreen.js":"20","C:\\A-Mart\\backend\\frontend\\src\\screens\\ShippingScreen.js":"21","C:\\A-Mart\\backend\\frontend\\src\\screens\\OrderListScreen.js":"22","C:\\A-Mart\\backend\\frontend\\src\\screens\\ProductEditScreen.js":"23","C:\\A-Mart\\backend\\frontend\\src\\screens\\UserEditScreen.js":"24","C:\\A-Mart\\backend\\frontend\\src\\screens\\ProductListScreen.js":"25","C:\\A-Mart\\backend\\frontend\\src\\components\\Loader.js":"26","C:\\A-Mart\\backend\\frontend\\src\\components\\SearchBox.js":"27","C:\\A-Mart\\backend\\frontend\\src\\components\\Message.js":"28","C:\\A-Mart\\backend\\frontend\\src\\components\\ProductCarousel.js":"29","C:\\A-Mart\\backend\\frontend\\src\\components\\Product.js":"30","C:\\A-Mart\\backend\\frontend\\src\\components\\Paginate.js":"31","C:\\A-Mart\\backend\\frontend\\src\\constants\\cartConstants.js":"32","C:\\A-Mart\\backend\\frontend\\src\\constants\\userConstants.js":"33","C:\\A-Mart\\backend\\frontend\\src\\constants\\orderConstants.js":"34","C:\\A-Mart\\backend\\frontend\\src\\components\\FormContainer.js":"35","C:\\A-Mart\\backend\\frontend\\src\\actions\\userActions.js":"36","C:\\A-Mart\\backend\\frontend\\src\\actions\\productActions.js":"37","C:\\A-Mart\\backend\\frontend\\src\\constants\\productConstants.js":"38","C:\\A-Mart\\backend\\frontend\\src\\components\\Rating.js":"39","C:\\A-Mart\\backend\\frontend\\src\\actions\\cartActions.js":"40","C:\\A-Mart\\backend\\frontend\\src\\actions\\orderActions.js":"41","C:\\A-Mart\\backend\\frontend\\src\\components\\CheckoutSteps.js":"42","C:\\A-Mart-Frontend\\frontend\\src\\index.js":"43","C:\\A-Mart-Frontend\\frontend\\src\\App.js":"44","C:\\A-Mart-Frontend\\frontend\\src\\store.js":"45","C:\\A-Mart-Frontend\\frontend\\src\\reportWebVitals.js":"46","C:\\A-Mart-Frontend\\frontend\\src\\components\\Header.js":"47","C:\\A-Mart-Frontend\\frontend\\src\\components\\Footer.js":"48","C:\\A-Mart-Frontend\\frontend\\src\\screens\\HomeScreen.js":"49","C:\\A-Mart-Frontend\\frontend\\src\\screens\\ProductScreen.js":"50","C:\\A-Mart-Frontend\\frontend\\src\\screens\\LoginScreen.js":"51","C:\\A-Mart-Frontend\\frontend\\src\\screens\\RegisterScreen.js":"52","C:\\A-Mart-Frontend\\frontend\\src\\screens\\CartScreen.js":"53","C:\\A-Mart-Frontend\\frontend\\src\\screens\\ProfileScreen.js":"54","C:\\A-Mart-Frontend\\frontend\\src\\screens\\ShippingScreen.js":"55","C:\\A-Mart-Frontend\\frontend\\src\\screens\\PaymentScreen.js":"56","C:\\A-Mart-Frontend\\frontend\\src\\screens\\PlaceOrderScreen.js":"57","C:\\A-Mart-Frontend\\frontend\\src\\screens\\OrderScreen.js":"58","C:\\A-Mart-Frontend\\frontend\\src\\screens\\UserListScreen.js":"59","C:\\A-Mart-Frontend\\frontend\\src\\screens\\UserEditScreen.js":"60","C:\\A-Mart-Frontend\\frontend\\src\\screens\\ProductListScreen.js":"61","C:\\A-Mart-Frontend\\frontend\\src\\screens\\ProductEditScreen.js":"62","C:\\A-Mart-Frontend\\frontend\\src\\screens\\OrderListScreen.js":"63","C:\\A-Mart-Frontend\\frontend\\src\\reducers\\cartReducers.js":"64","C:\\A-Mart-Frontend\\frontend\\src\\reducers\\userReducers.js":"65","C:\\A-Mart-Frontend\\frontend\\src\\reducers\\productReducers.js":"66","C:\\A-Mart-Frontend\\frontend\\src\\reducers\\orderReducers.js":"67","C:\\A-Mart-Frontend\\frontend\\src\\components\\Loader.js":"68","C:\\A-Mart-Frontend\\frontend\\src\\components\\SearchBox.js":"69","C:\\A-Mart-Frontend\\frontend\\src\\components\\Product.js":"70","C:\\A-Mart-Frontend\\frontend\\src\\components\\Message.js":"71","C:\\A-Mart-Frontend\\frontend\\src\\components\\ProductCarousel.js":"72","C:\\A-Mart-Frontend\\frontend\\src\\components\\Paginate.js":"73","C:\\A-Mart-Frontend\\frontend\\src\\components\\Rating.js":"74","C:\\A-Mart-Frontend\\frontend\\src\\components\\FormContainer.js":"75","C:\\A-Mart-Frontend\\frontend\\src\\components\\CheckoutSteps.js":"76","C:\\A-Mart-Frontend\\frontend\\src\\actions\\cartActions.js":"77","C:\\A-Mart-Frontend\\frontend\\src\\constants\\productConstants.js":"78","C:\\A-Mart-Frontend\\frontend\\src\\actions\\orderActions.js":"79","C:\\A-Mart-Frontend\\frontend\\src\\constants\\userConstants.js":"80","C:\\A-Mart-Frontend\\frontend\\src\\constants\\orderConstants.js":"81","C:\\A-Mart-Frontend\\frontend\\src\\actions\\productActions.js":"82","C:\\A-Mart-Frontend\\frontend\\src\\actions\\userActions.js":"83","C:\\A-Mart-Frontend\\frontend\\src\\constants\\cartConstants.js":"84","C:\\A-Mart-Frontend\\frontend\\src\\helper\\axiosInstance.js":"85"},{"size":630,"mtime":1678445914203,"results":"86","hashOfConfig":"87"},{"size":2433,"mtime":1682074648245,"results":"88","hashOfConfig":"87"},{"size":362,"mtime":1677912124522,"results":"89","hashOfConfig":"87"},{"size":2386,"mtime":1682762564963,"results":"90","hashOfConfig":"87"},{"size":4140,"mtime":1681813992121,"results":"91","hashOfConfig":"87"},{"size":1543,"mtime":1681215902461,"results":"92","hashOfConfig":"87"},{"size":3982,"mtime":1681315189178,"results":"93","hashOfConfig":"87"},{"size":340,"mtime":1677915248478,"results":"94","hashOfConfig":"87"},{"size":3084,"mtime":1682591335508,"results":"95","hashOfConfig":"87"},{"size":4104,"mtime":1682074607285,"results":"96","hashOfConfig":"87"},{"size":1746,"mtime":1682076349301,"results":"97","hashOfConfig":"87"},{"size":2430,"mtime":1680000089916,"results":"98","hashOfConfig":"87"},{"size":3941,"mtime":1682077615585,"results":"99","hashOfConfig":"87"},{"size":3427,"mtime":1680544838812,"results":"100","hashOfConfig":"87"},{"size":8416,"mtime":1682078196634,"results":"101","hashOfConfig":"87"},{"size":1582,"mtime":1681208069343,"results":"102","hashOfConfig":"87"},{"size":5435,"mtime":1681314742440,"results":"103","hashOfConfig":"87"},{"size":5976,"mtime":1682077920501,"results":"104","hashOfConfig":"87"},{"size":2814,"mtime":1681462936167,"results":"105","hashOfConfig":"87"},{"size":8393,"mtime":1682078071259,"results":"106","hashOfConfig":"87"},{"size":2736,"mtime":1680858801277,"results":"107","hashOfConfig":"87"},{"size":2634,"mtime":1681813206961,"results":"108","hashOfConfig":"87"},{"size":6358,"mtime":1682078635949,"results":"109","hashOfConfig":"87"},{"size":3229,"mtime":1681471997267,"results":"110","hashOfConfig":"87"},{"size":4325,"mtime":1682078478152,"results":"111","hashOfConfig":"87"},{"size":392,"mtime":1678527130391,"results":"112","hashOfConfig":"87"},{"size":891,"mtime":1681986505728,"results":"113","hashOfConfig":"87"},{"size":220,"mtime":1678527389117,"results":"114","hashOfConfig":"87"},{"size":1334,"mtime":1682076191556,"results":"115","hashOfConfig":"87"},{"size":873,"mtime":1678267170804,"results":"116","hashOfConfig":"87"},{"size":816,"mtime":1682077142901,"results":"117","hashOfConfig":"87"},{"size":296,"mtime":1680891631201,"results":"118","hashOfConfig":"87"},{"size":1508,"mtime":1681314888295,"results":"119","hashOfConfig":"87"},{"size":1262,"mtime":1681813889688,"results":"120","hashOfConfig":"87"},{"size":394,"mtime":1680858990560,"results":"121","hashOfConfig":"87"},{"size":6298,"mtime":1682775379648,"results":"122","hashOfConfig":"87"},{"size":6087,"mtime":1682775317659,"results":"123","hashOfConfig":"87"},{"size":1530,"mtime":1682074477002,"results":"124","hashOfConfig":"87"},{"size":1337,"mtime":1677932593815,"results":"125","hashOfConfig":"87"},{"size":1400,"mtime":1680859578500,"results":"126","hashOfConfig":"87"},{"size":4670,"mtime":1682775289126,"results":"127","hashOfConfig":"87"},{"size":1645,"mtime":1680721091521,"results":"128","hashOfConfig":"87"},{"size":630,"mtime":1678445914203,"results":"129","hashOfConfig":"130"},{"size":2430,"mtime":1683281629398,"results":"131","hashOfConfig":"130"},{"size":2433,"mtime":1682074648245,"results":"132","hashOfConfig":"130"},{"size":362,"mtime":1677912124522,"results":"133","hashOfConfig":"130"},{"size":3084,"mtime":1682591335508,"results":"134","hashOfConfig":"130"},{"size":340,"mtime":1677915248478,"results":"135","hashOfConfig":"130"},{"size":1746,"mtime":1682076349301,"results":"136","hashOfConfig":"130"},{"size":8416,"mtime":1682078196634,"results":"137","hashOfConfig":"130"},{"size":2430,"mtime":1680000089916,"results":"138","hashOfConfig":"130"},{"size":3427,"mtime":1680544838812,"results":"139","hashOfConfig":"130"},{"size":3941,"mtime":1682077615585,"results":"140","hashOfConfig":"130"},{"size":5435,"mtime":1681314742440,"results":"141","hashOfConfig":"130"},{"size":2736,"mtime":1680858801277,"results":"142","hashOfConfig":"130"},{"size":1582,"mtime":1681208069343,"results":"143","hashOfConfig":"130"},{"size":5976,"mtime":1682077920501,"results":"144","hashOfConfig":"130"},{"size":8393,"mtime":1682078071259,"results":"145","hashOfConfig":"130"},{"size":2814,"mtime":1681462936167,"results":"146","hashOfConfig":"130"},{"size":3229,"mtime":1681471997267,"results":"147","hashOfConfig":"130"},{"size":4325,"mtime":1682078478152,"results":"148","hashOfConfig":"130"},{"size":6358,"mtime":1683653991698,"results":"149","hashOfConfig":"130"},{"size":2634,"mtime":1681813206961,"results":"150","hashOfConfig":"130"},{"size":1543,"mtime":1681215902461,"results":"151","hashOfConfig":"130"},{"size":3982,"mtime":1681315189178,"results":"152","hashOfConfig":"130"},{"size":4104,"mtime":1682074607285,"results":"153","hashOfConfig":"130"},{"size":4140,"mtime":1681813992121,"results":"154","hashOfConfig":"130"},{"size":392,"mtime":1678527130391,"results":"155","hashOfConfig":"130"},{"size":891,"mtime":1681986505728,"results":"156","hashOfConfig":"130"},{"size":873,"mtime":1678267170804,"results":"157","hashOfConfig":"130"},{"size":220,"mtime":1678527389117,"results":"158","hashOfConfig":"130"},{"size":1334,"mtime":1682076191556,"results":"159","hashOfConfig":"130"},{"size":816,"mtime":1682077142901,"results":"160","hashOfConfig":"130"},{"size":1337,"mtime":1677932593815,"results":"161","hashOfConfig":"130"},{"size":394,"mtime":1680858990560,"results":"162","hashOfConfig":"130"},{"size":1645,"mtime":1680721091521,"results":"163","hashOfConfig":"130"},{"size":1466,"mtime":1683282614830,"results":"164","hashOfConfig":"130"},{"size":1530,"mtime":1682074477002,"results":"165","hashOfConfig":"130"},{"size":4670,"mtime":1682775289126,"results":"166","hashOfConfig":"130"},{"size":1508,"mtime":1681314888295,"results":"167","hashOfConfig":"130"},{"size":1262,"mtime":1681813889688,"results":"168","hashOfConfig":"130"},{"size":6127,"mtime":1683119197612,"results":"169","hashOfConfig":"130"},{"size":6298,"mtime":1682775379648,"results":"170","hashOfConfig":"130"},{"size":296,"mtime":1680891631201,"results":"171","hashOfConfig":"130"},{"size":1521,"mtime":1683653982695,"results":"172","hashOfConfig":"130"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"1d9jhq2",{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"176"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"176"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"176"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"176"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"176"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"176"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"176"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"176"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"176"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"176"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"176"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"176"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"176"},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"176"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"176"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},"vvqoxj",{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"321"},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"321"},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"321"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"321"},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"321"},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"321"},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"321"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"321"},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"321"},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"321"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"321"},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"321"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"321"},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"321"},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"321"},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"415","messages":"416","suppressedMessages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"418","messages":"419","suppressedMessages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"321"},{"filePath":"430","messages":"431","suppressedMessages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"433","messages":"434","suppressedMessages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"436","messages":"437","suppressedMessages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"321"},{"filePath":"440","messages":"441","suppressedMessages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"321"},{"filePath":"443","messages":"444","suppressedMessages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"446","messages":"447","suppressedMessages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\A-Mart\\backend\\frontend\\src\\index.js",[],[],[],"C:\\A-Mart\\backend\\frontend\\src\\store.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\reportWebVitals.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\App.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\reducers\\orderReducers.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\reducers\\cartReducers.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\reducers\\userReducers.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\components\\Footer.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\components\\Header.js",["449"],[],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ms-auto\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\A-Mart\\backend\\frontend\\src\\reducers\\productReducers.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\screens\\HomeScreen.js",["450","451"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Product from '../components/Product'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport axios from 'axios'\r\n\r\nfunction HomeScreen() {\r\n  // const [products, setProducts] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n  const productList = useSelector(state => state.productList)\r\n  const {error, loading, products, page, pages} = productList\r\n\r\n  const location = useLocation()\r\n  let keyword = location.search\r\n\r\n  // console.log(keyword)\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword))\r\n\r\n    // async function fetchProducts(){\r\n    //   const {data} = await axios.get('http://127.0.0.1:8000/api/products/')\r\n    //   setProducts(data)\r\n    // }\r\n\r\n    // fetchProducts()\r\n  }, [dispatch, keyword])\r\n  return (\r\n    <div>\r\n      {!keyword && <ProductCarousel />}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate page={page} pages={pages} keyword={keyword} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen","C:\\A-Mart\\backend\\frontend\\src\\screens\\LoginScreen.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\screens\\CartScreen.js",["452"],[],"import React, {useEffect, useState} from 'react'\r\nimport { Link, useLocation, useParams, useNavigate} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen() {\r\n  const { id } = useParams();\r\n  const productId = id;\r\n\r\n  const location  = useLocation()\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n\r\n  const checkoutHandler = () => {\r\n    if (userInfo) {\r\n      navigate(\"/shipping\");\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message variant=\"info\">\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n\r\n                  <Col md={2}>${item.price}</Col>\r\n\r\n                  <Col md={3}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n\r\n                  <Col md={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n\r\n          <ListGroup.Item className=\"d-flex justify-content-center\"> \r\n            <Button\r\n              type=\"button\"\r\n              className=\"btn-block w-100\"\r\n              disabled={cartItems.length === 0}\r\n              onClick={checkoutHandler}\r\n            >\r\n              Proceed To Checkout\r\n            </Button>\r\n          </ListGroup.Item>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default CartScreen","C:\\A-Mart\\backend\\frontend\\src\\screens\\RegisterScreen.js",["453"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen() {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const location = useLocation()\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            navigate(redirect)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(password != confirmPassword){\r\n            setMessage(\"Passwords do not match\")\r\n        }else{\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"Password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Sign In\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen","C:\\A-Mart\\backend\\frontend\\src\\screens\\ProductScreen.js",["454"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n// import axios from 'axios'\r\n\r\nfunction ProductScreen() {\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n\r\n    const {id} = useParams()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    // // const product = products.find((p) => p._id == id)\r\n    // const [product, setProduct] = useState([])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n      loading: loadingProductReview,\r\n      error: errorProductReview,\r\n      success: successProductReview,\r\n    } = productReviewCreate;\r\n\r\n    const addToCartHandler = () => (\r\n      navigate(`/cart/${id}?qty=${qty}`)\r\n    )\r\n\r\n    useEffect(() => {\r\n    //   async function fetchProduct(){\r\n    //     const {data} = await axios.get(`/api/products/${id}`)\r\n    //     setProduct(data)\r\n    //   }\r\n  \r\n    //   fetchProduct()\r\n      if(successProductReview){\r\n        setRating(0)\r\n        setComment('')\r\n        dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n      }\r\n\r\n      dispatch(listProductDetails(id))\r\n    }, [dispatch, id, successProductReview])\r\n\r\n    const submitHandler = (e) =>{\r\n      e.preventDefault()\r\n      dispatch(createProductReview(id,{\r\n        rating,\r\n        comment,\r\n      }))\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Link to=\"/\" className=\"btn btn-light my-3\">\r\n          Go Back\r\n        </Link>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <div>\r\n            <Row>\r\n              <Col md={6}>\r\n                <Image src={product.image} alt={product.name} fluid></Image>\r\n              </Col>\r\n\r\n              <Col md={3}>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <h3>{product.name}</h3>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Rating\r\n                      value={product.rating}\r\n                      text={`${product.numReviews} reviews`}\r\n                      color={\"#f8e825\"}\r\n                    />\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                  <ListGroup.Item>{product.description}</ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n\r\n              <Col md={3}>\r\n                <Card>\r\n                  <ListGroup>\r\n                    <ListGroup.Item variant=\"flush\">\r\n                      <Row>\r\n                        <Col>Price:</Col>\r\n                        <Col>\r\n                          <strong>${product.price}</strong>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Status:</Col>\r\n                        <Col>\r\n                          {product.countInStock > 0\r\n                            ? \"In Stock\"\r\n                            : \"Out of Stock\"}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    {product.countInStock > 0 && (\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col>Qty</Col>\r\n                          <Col xs=\"auto\" className=\"my-1\">\r\n                            <Form.Control\r\n                              as=\"select\"\r\n                              value={qty}\r\n                              onChange={(e) => setQty(e.target.value)}\r\n                            >\r\n                              {[...Array(product.countInStock).keys()].map(\r\n                                (x) => (\r\n                                  <option key={x + 1} value={x + 1}>\r\n                                    {x + 1}\r\n                                  </option>\r\n                                )\r\n                              )}\r\n                            </Form.Control>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    )}\r\n                    <ListGroup.Item className=\"d-flex justify-content-center\">\r\n                      <Button\r\n                        onClick={addToCartHandler}\r\n                        className=\"btn-block w-100\"\r\n                        disabled={product.countInStock == 0}\r\n                        type=\"button\"\r\n                      >\r\n                        Add to Cart\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col md={6}>\r\n                <h4>Reviews</h4>\r\n                {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n                <ListGroup variant='flush'>\r\n                  {product.reviews.map((review) => (\r\n                    <ListGroup.Item key={review._id}>\r\n                      <strong>{review.name}</strong>\r\n                      <Rating value={review.rating} color='#f8e825'/>\r\n                      <p>{review.createdAt}</p>\r\n                      <p>{review.comment}</p>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n\r\n                    <ListGroup.Item>\r\n                      <h4>Write a review</h4>\r\n\r\n                      {loadingProductReview && <Loader />}\r\n                      {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                      {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n\r\n                      {userInfo ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                          <Form.Group controlId='review'>\r\n                            <Form.Label>Rating</Form.Label>\r\n                            <Form.Control \r\n                            as='select'\r\n                            value={rating}\r\n                            onChange={(e) => setRating(e.target.value)}\r\n                            >\r\n                              <option value=''>Please Select...</option>\r\n                              <option value='1'>1 - Poor</option>\r\n                              <option value='2'>2 - Fair</option>\r\n                              <option value='3'>3 - Good</option>\r\n                              <option value='4'>4 - Very Good</option>\r\n                              <option value='5'>5 - Excellent</option>\r\n\r\n                            </Form.Control>\r\n                          </Form.Group>\r\n\r\n                          <Form.Group controlId='comment'>\r\n                            <Form.Label>Review</Form.Label>\r\n                            <Form.Control\r\n                            as='textarea'\r\n                            rows='5'\r\n                            value={comment}\r\n                            onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                          </Form.Group>\r\n\r\n                          <Button\r\n                          variant='primary'\r\n                          disabled={loadingProductReview}\r\n                          type='submit'>Submit</Button>\r\n                        </Form>\r\n                      ) : (<Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>)}\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ProductScreen","C:\\A-Mart\\backend\\frontend\\src\\screens\\PaymentScreen.js",["455","456"],[],"import React, {useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Col} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen() {\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    if(!shippingAddress.address){\r\n        navigate('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n  \r\n    const dispatch = useDispatch()\r\n  \r\n    const navigate = useNavigate()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"paypal\"\r\n              name=\"paymentMethod\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default PaymentScreen","C:\\A-Mart\\backend\\frontend\\src\\screens\\ProfileScreen.js",["457","458"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen() {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const {loading:loadingOrders, error:errorOrders, orders} = orderListMy\r\n\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            navigate('/login')\r\n        }\r\n        else{\r\n            if(!user || !user.name || success || userInfo._id !== user._id){\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }\r\n            else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[navigate, dispatch, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(password != confirmPassword){\r\n            setMessage(\"Passwords do not match\")\r\n        }else{\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password,\r\n              })\r\n            );\r\n        }\r\n    }\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>My Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"Password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Paid</th>\r\n                <th>Delivered</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map(order => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt}</td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>{order.isPaid ? order.paidAt : (\r\n                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                  )}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm'>Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen","C:\\A-Mart\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js",["459","460"],[],"import React, {useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen() {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    \r\n    const cart = useSelector(state => state.cart)\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {error, order, success} = orderCreate\r\n\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.1 * cart.itemsPrice)).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    useEffect(() => {\r\n        \r\n        if(!cart.paymentMethod){\r\n        navigate(\"/payment\");\r\n        }\r\n        if(success){\r\n            navigate(`/order/${order._id}`)\r\n            dispatch({type: ORDER_CREATE_RESET})\r\n        }\r\n    }, [success, navigate])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Shipping: </strong>\r\n                        {cart.shippingAddress.address},\r\n                        {' '}\r\n                        {cart.shippingAddress.city},\r\n                        {' '}\r\n                        {cart.shippingAddress.country},\r\n                        {' '}\r\n                        {cart.shippingAddress.postalCode}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p>\r\n                        <strong>Method: </strong>\r\n                        {cart.paymentMethod}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Cart Items</h2>\r\n                    {cart.cartItems.length === 0 ? (\r\n                        <Message>\r\n                            Your cart is empty\r\n                        </Message>\r\n                    ): (\r\n                        <ListGroup variant='flush'>\r\n                            {cart.cartItems.map((item, index) => (\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <h2>Order Summary</h2>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Items: </Col>\r\n                            <Col>${cart.itemsPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Shipping: </Col>\r\n                            <Col>${cart.shippingPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Tax: </Col>\r\n                            <Col>${cart.taxPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Total: </Col>\r\n                            <Col>${cart.totalPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    \r\n                    <ListGroup.Item>\r\n                        {error && <Message variant='danger'>{error}</Message>}\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"d-flex justify-content-center\">\r\n                        <Button\r\n                        type='button'\r\n                        className=\"btn-block w-100\"\r\n                        disabled = {cart.cartItems.length === 0}\r\n                        onClick={placeOrder}>\r\n                            Place Order\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen","C:\\A-Mart\\backend\\frontend\\src\\screens\\UserListScreen.js",["461","462"],[],"import React, {useState, useEffect} from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen() {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success:successDelete} = userDelete\r\n\r\n    useEffect(() =>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        }else{\r\n            navigate('/login')\r\n        }\r\n    }, [dispatch, navigate, successDelete, userInfo])\r\n\r\n    const DeleteHandler = (id) => {\r\n      if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n        dispatch(deleteUser(id))\r\n      }\r\n    } \r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n\r\n                  <Button variant=\"danger\" className=\"btn-sm\" onClick={() => DeleteHandler(user._id)}>\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserListScreen","C:\\A-Mart\\backend\\frontend\\src\\screens\\OrderScreen.js",["463"],[],"import React, {useState, useEffect} from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen() {\r\n    const {id} = useParams()\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n    \r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {error, order, loading} = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading: loadingPay, success: successPay} = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {loading: loadingDeliver, success: successDeliver} = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const addPayPalScript = () =>{\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=Ae2eMGM63yzd9eI5htaLGHTwh6yeZVrijPadorLq2CJGKuKMn68FdjCMfBT87UVkeKNVxcbRC81ml_4j&currency=USD'\r\n        script.async = true\r\n        script.onload = () =>{\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            navigate('/login')\r\n        }\r\n\r\n        if(!order || successPay || order._id !== Number(id) || successDeliver){\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(id))\r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript();   \r\n            }\r\n            else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, id, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) =>{\r\n        dispatch(payOrder(id, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () =>{\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <div>\r\n        <h2>Order: {order._id}</h2>\r\n      <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>\r\n                            Name:   \r\n                        </strong>\r\n                         {order.user.name}\r\n                    </p>\r\n                    <p>\r\n                        <strong>\r\n                            Email: \r\n                        </strong>\r\n                        <a href={`mailto:${order.user.email}`}> {order.user.email}</a>\r\n                    </p>\r\n                    <p>\r\n                        <strong>Shipping: </strong>\r\n                        {order.shippingAddress.address},\r\n                        {' '}\r\n                        {order.shippingAddress.city},\r\n                        {' '}\r\n                        {order.shippingAddress.country},\r\n                        {' '}\r\n                        {order.shippingAddress.postalCode}\r\n                    </p>\r\n                    <p>\r\n                        {order.isDelivered ? \r\n                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                        : <Message variant='warning'>Not Delivered</Message>}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p>\r\n                        <strong>Method: </strong>\r\n                        {order.paymentMethod}\r\n                    </p>\r\n                    <p>\r\n                        {order.isPaid ? \r\n                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                        : <Message variant='warning'>Not Paid</Message>}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {order.orderItems.length === 0 ? (\r\n                        <Message>\r\n                            Order is empty\r\n                        </Message>\r\n                    ): (\r\n                        <ListGroup variant='flush'>\r\n                            {order.orderItems.map((item, index) => (\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <h2>Order Summary</h2>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Items: </Col>\r\n                            <Col>${order.itemsPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Shipping: </Col>\r\n                            <Col>${order.shippingPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Tax: </Col>\r\n                            <Col>${order.taxPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Total: </Col>\r\n                            <Col>${order.totalPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    {!order.isPaid && (\r\n                        <ListGroup.Item>\r\n                            {loadingPay && <Loader />}\r\n                            {!sdkReady ?\r\n                            <Loader /> : (\r\n                                <PayPalButton \r\n                                amount={order.totalPrice}\r\n                                onSuccess={successPaymentHandler}\r\n                                />\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    )}\r\n\r\n                    {loadingDeliver && <Loader />}\r\n\r\n                    {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                        <ListGroup.Item className=\"d-flex justify-content-center\">\r\n                            <Button\r\n                            type='button'\r\n                            className=\"btn-block w-100\"\r\n                            onClick={deliverHandler}>\r\n                                Mark as Delivered\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    )}\r\n\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderScreen","C:\\A-Mart\\backend\\frontend\\src\\screens\\ShippingScreen.js",["464"],[],"import React, {useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Form, Button,} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen() {\r\n  const cart = useSelector(state => state.cart)\r\n  const {shippingAddress} = cart\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const onSubmitHandler = (e) =>{\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n    navigate('/payment')\r\n  }\r\n\r\n  return (\r\n    \r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2/>\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={onSubmitHandler}>\r\n\r\n      <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Address\"\r\n            value={address ? address : ''}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        \r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter City\"\r\n            value={city ? city : ''}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Postal Code\"\r\n            value={postalCode ? postalCode : ''}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Country\"\r\n            value={country ? country : ''}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default ShippingScreen","C:\\A-Mart\\backend\\frontend\\src\\screens\\OrderListScreen.js",["465"],[],"import React, {useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading, error, orders} = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n\r\n    useEffect(() =>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n        }else{\r\n            navigate('/login')\r\n        }\r\n    }, [dispatch, navigate, userInfo])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt\r\n                  ) : (\r\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt\r\n                  ) : (\r\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderListScreen","C:\\A-Mart\\backend\\frontend\\src\\screens\\ProductEditScreen.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\screens\\UserEditScreen.js",["466"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport { Form, Button, } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen() {\r\n    const {id} = useParams()\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const {error: errorUpdate, loading: loadingUpdate, success: successUpdate} = userUpdate\r\n\r\n    useEffect(() => {\r\n      if(successUpdate){\r\n        dispatch({type: USER_UPDATE_RESET})\r\n        navigate('/admin/userlist')\r\n      }else{\r\n        if (!user.name || user._id !== Number(id)) {\r\n          dispatch(getUserDetails(id));\r\n        } else {\r\n          setName(user.name);\r\n          setEmail(user.email);\r\n          setIsAdmin(user.isAdmin);\r\n        }\r\n      }\r\n    },[user, id, successUpdate, navigate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id:user._id, name, email, isAdmin}))\r\n    }\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/userlist\">Go Back</Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isadmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen","C:\\A-Mart\\backend\\frontend\\src\\screens\\ProductListScreen.js",["467","468"],[],"import React, {useState, useEffect} from 'react'\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen() {\r\n\r\n    const {id} = useParams()\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, page, pages} = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading: loadingDelete, error: errorDelete, success: successDelete} = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const location = useLocation()\r\n    let keyword = location.search\r\n\r\n    useEffect(() =>{\r\n        dispatch({type:PRODUCT_CREATE_RESET})\r\n\r\n        if(!userInfo.isAdmin){\r\n          navigate(\"/login\");\r\n        }\r\n\r\n        if(successCreate){\r\n          navigate(`/admin/product/${createdProduct._id}/edit`)\r\n        }else{\r\n          dispatch(listProducts(keyword));\r\n        }\r\n\r\n    }, [dispatch, navigate, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    const DeleteHandler = (id) => {\r\n      if(window.confirm(\"Are you sure you want to delete this product?\")){\r\n        dispatch(deleteProduct(id))\r\n      }\r\n    } \r\n\r\n    const createProductHandler = (product) =>{\r\n        dispatch(createProduct())\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"align-items-center\">\r\n        <Col className=\"text-right\">\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"d-flex justify-content-end\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => DeleteHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate page={page} pages={pages} isAdmin={true} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductListScreen","C:\\A-Mart\\backend\\frontend\\src\\components\\Loader.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\components\\SearchBox.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\components\\Message.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\components\\ProductCarousel.js",["469"],[],"import React, {useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const {loading, error, products} = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n  return (\r\n    loading ? <Loader />\r\n    : error ? <Message variant='danger'>{error}</Message>\r\n    : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel.caption'>\r\n                            <h4>{product.name} (${product.price})</h4>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n  )\r\n}\r\n\r\nexport default ProductCarousel","C:\\A-Mart\\backend\\frontend\\src\\components\\Product.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\components\\Paginate.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\constants\\cartConstants.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\constants\\userConstants.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\constants\\orderConstants.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\components\\FormContainer.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\actions\\userActions.js",["470","471","472","473","474","475","476"],[],"import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n  \r\n    USER_LOGOUT,\r\n  \r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n  \r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n  } from \"../constants/userConstants\";\r\n  \r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\nimport axiosInstance from \"../helper/axiosInstance\";\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        \r\n\r\n        const {data} = await axiosInstance().post('/api/users/login/',\r\n        {'username': email, 'password':password})\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type: USER_DETAILS_RESET\r\n    })\r\n    dispatch({\r\n        type: ORDER_LIST_MY_RESET\r\n    })\r\n    dispatch({\r\n        type: USER_LIST_RESET\r\n    })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        \r\n\r\n        const {data} = await axiosInstance().post('/api/users/register/',\r\n        {'name': name, 'email': email, 'password':password})\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        \r\n\r\n        const { data } = await axiosInstance().get(`/api/users/${id}/`);\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        \r\n\r\n        const { data } = await axiosInstance().put('/api/users/profile/update/', user);\r\n\r\n\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        \r\n\r\n        const { data } = await axiosInstance().get('/api/users/');\r\n\r\n\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        \r\n\r\n        const { data } = await axiosInstance().delete(`/api/users/delete/${id}/`);\r\n\r\n\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        })\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        \r\n\r\n        const { data } = await axiosInstance().put(`/api/users/update/${user._id}/`, user);\r\n\r\n\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}","C:\\A-Mart\\backend\\frontend\\src\\actions\\productActions.js",["477"],[],"\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport axiosInstance from \"../helper/axiosInstance\";\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_LIST_REQUEST,\r\n        })\r\n\r\n        const {data} = await axiosInstance().get(`/api/products/${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_TOP_REQUEST,\r\n        })\r\n\r\n        const {data} = await axiosInstance().get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {data} = await axiosInstance().get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axiosInstance().post(`/api/products/create/`, {}, config);\r\n\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axiosInstance().put(`/api/products/update/${product._id}/`, product, config);\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        \r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axiosInstance().post(`/api/products/${productId}/reviews/`, review, config);\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axiosInstance().delete(`/api/products/delete/${id}/`, config);\r\n\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n","C:\\A-Mart\\backend\\frontend\\src\\constants\\productConstants.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\components\\Rating.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\actions\\cartActions.js",[],[],"C:\\A-Mart\\backend\\frontend\\src\\actions\\orderActions.js",["478"],[],"\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    \r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n  } from \"../constants/orderConstants\";\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\nimport axiosInstance from '../helper/axiosInstance';\r\n\r\nexport const createOrder = (order) => async (dispatch) => {\r\ntry{\r\n    dispatch({\r\n        type: ORDER_CREATE_REQUEST\r\n    })\r\n\r\n    \r\n\r\n    \r\n\r\n    const { data } = await axiosInstance().post('/api/orders/add/', order);\r\n\r\n\r\n\r\n    dispatch({\r\n        type: ORDER_CREATE_SUCCESS,\r\n        payload: data\r\n    })\r\n\r\n    dispatch({\r\n        type: CART_CLEAR_ITEMS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.removeItem('cartItems')\r\n    // localStorage.removeItem('paymentMethod')\r\n    // localStorage.removeItem('shippingAddress')\r\n\r\n}\r\n\r\ncatch(error){\r\n    dispatch({\r\n        type: ORDER_CREATE_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n    })\r\n}\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n    \r\n        \r\n    \r\n        \r\n    \r\n        const { data } = await axiosInstance().get(`/api/orders/${id}/`);\r\n    \r\n    \r\n    \r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    \r\n    }\r\n    \r\n    catch(error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n    }\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n    \r\n        \r\n    \r\n        \r\n    \r\n        const { data } = await axiosInstance().put(`/api/orders/${id}/pay/`, paymentResult);\r\n    \r\n    \r\n    \r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n    \r\n    }\r\n    \r\n    catch(error){\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n    }\r\n\r\nexport const deliverOrder = (order) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n    \r\n        \r\n    \r\n        \r\n    \r\n        const { data } = await axiosInstance().put(`/api/orders/${order._id}/deliver/`, {});\r\n    \r\n    \r\n    \r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n    \r\n    }\r\n        \r\n        catch(error){\r\n            dispatch({\r\n                type: ORDER_DELIVER_FAIL,\r\n                payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n            })\r\n        }\r\n        }\r\n\r\nexport const listMyOrders = () => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n    \r\n        \r\n    \r\n        \r\n    \r\n        const { data } = await axiosInstance().get(`/api/orders/myorders/`);\r\n    \r\n    \r\n    \r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n    \r\n    }\r\n    \r\n    catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n    \r\n        \r\n    \r\n        \r\n    \r\n        const { data } = await axiosInstance().get(`/api/orders/`);\r\n    \r\n    \r\n    \r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    \r\n    }\r\n    \r\n    catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}","C:\\A-Mart\\backend\\frontend\\src\\components\\CheckoutSteps.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\index.js",[],[],[],"C:\\A-Mart-Frontend\\frontend\\src\\App.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\store.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\reportWebVitals.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\components\\Header.js",["479"],[],"C:\\A-Mart-Frontend\\frontend\\src\\components\\Footer.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\HomeScreen.js",["480","481"],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\ProductScreen.js",["482"],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\LoginScreen.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\RegisterScreen.js",["483"],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\CartScreen.js",["484"],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\ProfileScreen.js",["485","486"],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\ShippingScreen.js",["487"],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\PaymentScreen.js",["488","489"],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\PlaceOrderScreen.js",["490","491"],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\OrderScreen.js",["492"],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\UserListScreen.js",["493","494"],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\UserEditScreen.js",["495"],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\ProductListScreen.js",["496","497"],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\ProductEditScreen.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\screens\\OrderListScreen.js",["498"],[],"C:\\A-Mart-Frontend\\frontend\\src\\reducers\\cartReducers.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\reducers\\userReducers.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\reducers\\productReducers.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\reducers\\orderReducers.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\components\\Loader.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\components\\SearchBox.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\components\\Product.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\components\\Message.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\components\\ProductCarousel.js",["499"],[],"C:\\A-Mart-Frontend\\frontend\\src\\components\\Paginate.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\components\\Rating.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\components\\FormContainer.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\components\\CheckoutSteps.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\actions\\cartActions.js",["500"],[],"C:\\A-Mart-Frontend\\frontend\\src\\constants\\productConstants.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\actions\\orderActions.js",["501"],[],"C:\\A-Mart-Frontend\\frontend\\src\\constants\\userConstants.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\constants\\orderConstants.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\actions\\productActions.js",["502","503","504","505","506"],[],"\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport axiosInstance from \"../helper/axiosInstance\";\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_LIST_REQUEST,\r\n        })\r\n\r\n        const {data} = await axiosInstance().get(`/api/products/${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_TOP_REQUEST,\r\n        })\r\n\r\n        const {data} = await axiosInstance().get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {data} = await axiosInstance().get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        // const config = {\r\n        //     headers: {\r\n        //         'Content-type': 'application/json',\r\n        //         'Authorization': `Bearer ${userInfo.token}`\r\n        //     }\r\n        // }\r\n\r\n        const { data } = await axiosInstance().post(`/api/products/create/`, {});\r\n\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        // const config = {\r\n        //     headers: {\r\n        //         'Content-type': 'application/json',\r\n        //         'Authorization': `Bearer ${userInfo.token}`\r\n        //     }\r\n        // }\r\n\r\n        const { data } = await axiosInstance().put(`/api/products/update/${product._id}/`, product);\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        \r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        // const config = {\r\n        //     headers: {\r\n        //         'Content-type': 'application/json',\r\n        //         'Authorization': `Bearer ${userInfo.token}`\r\n        //     }\r\n        // }\r\n\r\n        const { data } = await axiosInstance().post(`/api/products/${productId}/reviews/`, review);\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        // const config = {\r\n        //     headers: {\r\n        //         'Content-type': 'application/json',\r\n        //         'Authorization': `Bearer ${userInfo.token}`\r\n        //     }\r\n        // }\r\n\r\n        const { data } = await axiosInstance().delete(`/api/products/delete/${id}/`);\r\n\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n","C:\\A-Mart-Frontend\\frontend\\src\\actions\\userActions.js",["507","508","509","510","511","512","513"],[],"C:\\A-Mart-Frontend\\frontend\\src\\constants\\cartConstants.js",[],[],"C:\\A-Mart-Frontend\\frontend\\src\\helper\\axiosInstance.js",[],[],{"ruleId":"514","severity":1,"message":"515","line":3,"column":34,"nodeType":"516","messageId":"517","endLine":3,"endColumn":37},{"ruleId":"514","severity":1,"message":"518","line":1,"column":16,"nodeType":"516","messageId":"517","endLine":1,"endColumn":24},{"ruleId":"514","severity":1,"message":"519","line":11,"column":8,"nodeType":"516","messageId":"517","endLine":11,"endColumn":13},{"ruleId":"514","severity":1,"message":"518","line":1,"column":27,"nodeType":"516","messageId":"517","endLine":1,"endColumn":35},{"ruleId":"520","severity":1,"message":"521","line":36,"column":21,"nodeType":"522","messageId":"523","endLine":36,"endColumn":23},{"ruleId":"520","severity":1,"message":"524","line":149,"column":56,"nodeType":"522","messageId":"523","endLine":149,"endColumn":58},{"ruleId":"514","severity":1,"message":"525","line":1,"column":26,"nodeType":"516","messageId":"517","endLine":1,"endColumn":35},{"ruleId":"526","severity":1,"message":"527","line":14,"column":9,"nodeType":"516","messageId":"528","endLine":14,"endColumn":17},{"ruleId":"514","severity":1,"message":"529","line":2,"column":10,"nodeType":"516","messageId":"517","endLine":2,"endColumn":14},{"ruleId":"520","severity":1,"message":"521","line":55,"column":21,"nodeType":"522","messageId":"523","endLine":55,"endColumn":23},{"ruleId":"514","severity":1,"message":"518","line":1,"column":16,"nodeType":"516","messageId":"517","endLine":1,"endColumn":24},{"ruleId":"530","severity":1,"message":"531","line":34,"column":8,"nodeType":"532","endLine":34,"endColumn":27,"suggestions":"533"},{"ruleId":"514","severity":1,"message":"518","line":1,"column":16,"nodeType":"516","messageId":"517","endLine":1,"endColumn":24},{"ruleId":"514","severity":1,"message":"534","line":2,"column":10,"nodeType":"516","messageId":"517","endLine":2,"endColumn":21},{"ruleId":"530","severity":1,"message":"535","line":63,"column":8,"nodeType":"532","endLine":63,"endColumn":57,"suggestions":"536"},{"ruleId":"514","severity":1,"message":"525","line":1,"column":26,"nodeType":"516","messageId":"517","endLine":1,"endColumn":35},{"ruleId":"514","severity":1,"message":"518","line":1,"column":16,"nodeType":"516","messageId":"517","endLine":1,"endColumn":24},{"ruleId":"530","severity":1,"message":"537","line":42,"column":7,"nodeType":"532","endLine":42,"endColumn":42,"suggestions":"538"},{"ruleId":"514","severity":1,"message":"518","line":1,"column":16,"nodeType":"516","messageId":"517","endLine":1,"endColumn":24},{"ruleId":"514","severity":1,"message":"539","line":14,"column":12,"nodeType":"516","messageId":"517","endLine":14,"endColumn":14},{"ruleId":"514","severity":1,"message":"518","line":1,"column":27,"nodeType":"516","messageId":"517","endLine":1,"endColumn":35},{"ruleId":"514","severity":1,"message":"540","line":20,"column":5,"nodeType":"516","messageId":"517","endLine":20,"endColumn":30},{"ruleId":"514","severity":1,"message":"541","line":126,"column":25,"nodeType":"516","messageId":"517","endLine":126,"endColumn":33},{"ruleId":"514","severity":1,"message":"541","line":156,"column":25,"nodeType":"516","messageId":"517","endLine":156,"endColumn":33},{"ruleId":"514","severity":1,"message":"541","line":195,"column":25,"nodeType":"516","messageId":"517","endLine":195,"endColumn":33},{"ruleId":"514","severity":1,"message":"541","line":227,"column":25,"nodeType":"516","messageId":"517","endLine":227,"endColumn":33},{"ruleId":"514","severity":1,"message":"542","line":232,"column":17,"nodeType":"516","messageId":"517","endLine":232,"endColumn":21},{"ruleId":"514","severity":1,"message":"541","line":258,"column":25,"nodeType":"516","messageId":"517","endLine":258,"endColumn":33},{"ruleId":"514","severity":1,"message":"542","line":236,"column":17,"nodeType":"516","messageId":"517","endLine":236,"endColumn":21},{"ruleId":"514","severity":1,"message":"543","line":26,"column":5,"nodeType":"516","messageId":"517","endLine":26,"endColumn":24},{"ruleId":"514","severity":1,"message":"515","line":3,"column":34,"nodeType":"516","messageId":"517","endLine":3,"endColumn":37},{"ruleId":"514","severity":1,"message":"518","line":1,"column":16,"nodeType":"516","messageId":"517","endLine":1,"endColumn":24},{"ruleId":"514","severity":1,"message":"519","line":11,"column":8,"nodeType":"516","messageId":"517","endLine":11,"endColumn":13},{"ruleId":"520","severity":1,"message":"524","line":149,"column":56,"nodeType":"522","messageId":"523","endLine":149,"endColumn":58},{"ruleId":"520","severity":1,"message":"521","line":36,"column":21,"nodeType":"522","messageId":"523","endLine":36,"endColumn":23},{"ruleId":"514","severity":1,"message":"518","line":1,"column":27,"nodeType":"516","messageId":"517","endLine":1,"endColumn":35},{"ruleId":"514","severity":1,"message":"529","line":2,"column":10,"nodeType":"516","messageId":"517","endLine":2,"endColumn":14},{"ruleId":"520","severity":1,"message":"521","line":55,"column":21,"nodeType":"522","messageId":"523","endLine":55,"endColumn":23},{"ruleId":"514","severity":1,"message":"525","line":1,"column":26,"nodeType":"516","messageId":"517","endLine":1,"endColumn":35},{"ruleId":"514","severity":1,"message":"525","line":1,"column":26,"nodeType":"516","messageId":"517","endLine":1,"endColumn":35},{"ruleId":"526","severity":1,"message":"527","line":14,"column":9,"nodeType":"516","messageId":"528","endLine":14,"endColumn":17},{"ruleId":"514","severity":1,"message":"518","line":1,"column":16,"nodeType":"516","messageId":"517","endLine":1,"endColumn":24},{"ruleId":"530","severity":1,"message":"531","line":34,"column":8,"nodeType":"532","endLine":34,"endColumn":27,"suggestions":"544"},{"ruleId":"530","severity":1,"message":"535","line":63,"column":8,"nodeType":"532","endLine":63,"endColumn":57,"suggestions":"545"},{"ruleId":"514","severity":1,"message":"518","line":1,"column":16,"nodeType":"516","messageId":"517","endLine":1,"endColumn":24},{"ruleId":"514","severity":1,"message":"534","line":2,"column":10,"nodeType":"516","messageId":"517","endLine":2,"endColumn":21},{"ruleId":"530","severity":1,"message":"537","line":42,"column":7,"nodeType":"532","endLine":42,"endColumn":42,"suggestions":"546"},{"ruleId":"514","severity":1,"message":"518","line":1,"column":16,"nodeType":"516","messageId":"517","endLine":1,"endColumn":24},{"ruleId":"514","severity":1,"message":"539","line":14,"column":12,"nodeType":"516","messageId":"517","endLine":14,"endColumn":14},{"ruleId":"514","severity":1,"message":"518","line":1,"column":16,"nodeType":"516","messageId":"517","endLine":1,"endColumn":24},{"ruleId":"514","severity":1,"message":"518","line":1,"column":27,"nodeType":"516","messageId":"517","endLine":1,"endColumn":35},{"ruleId":"514","severity":1,"message":"519","line":1,"column":8,"nodeType":"516","messageId":"517","endLine":1,"endColumn":13},{"ruleId":"514","severity":1,"message":"543","line":26,"column":5,"nodeType":"516","messageId":"517","endLine":26,"endColumn":24},{"ruleId":"514","severity":1,"message":"541","line":110,"column":25,"nodeType":"516","messageId":"517","endLine":110,"endColumn":33},{"ruleId":"514","severity":1,"message":"541","line":148,"column":25,"nodeType":"516","messageId":"517","endLine":148,"endColumn":33},{"ruleId":"514","severity":1,"message":"541","line":190,"column":25,"nodeType":"516","messageId":"517","endLine":190,"endColumn":33},{"ruleId":"514","severity":1,"message":"541","line":226,"column":25,"nodeType":"516","messageId":"517","endLine":226,"endColumn":33},{"ruleId":"514","severity":1,"message":"542","line":236,"column":17,"nodeType":"516","messageId":"517","endLine":236,"endColumn":21},{"ruleId":"514","severity":1,"message":"540","line":20,"column":5,"nodeType":"516","messageId":"517","endLine":20,"endColumn":30},{"ruleId":"514","severity":1,"message":"541","line":126,"column":25,"nodeType":"516","messageId":"517","endLine":126,"endColumn":33},{"ruleId":"514","severity":1,"message":"541","line":156,"column":25,"nodeType":"516","messageId":"517","endLine":156,"endColumn":33},{"ruleId":"514","severity":1,"message":"541","line":195,"column":25,"nodeType":"516","messageId":"517","endLine":195,"endColumn":33},{"ruleId":"514","severity":1,"message":"541","line":227,"column":25,"nodeType":"516","messageId":"517","endLine":227,"endColumn":33},{"ruleId":"514","severity":1,"message":"542","line":232,"column":17,"nodeType":"516","messageId":"517","endLine":232,"endColumn":21},{"ruleId":"514","severity":1,"message":"541","line":258,"column":25,"nodeType":"516","messageId":"517","endLine":258,"endColumn":33},"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","no-use-before-define","'navigate' was used before it was defined.","usedBeforeDefined","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cart.paymentMethod', 'dispatch', and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["547"],"'useLocation' is defined but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'userInfo'. Either include them or remove the dependency array.",["548"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["549"],"'id' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'userInfo' is assigned a value but never used.","'data' is assigned a value but never used.","'ORDER_DELIVER_RESET' is defined but never used.",["550"],["551"],["552"],{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"553","fix":"559"},{"desc":"555","fix":"560"},{"desc":"557","fix":"561"},"Update the dependencies array to be: [success, navigate, cart.paymentMethod, order._id, dispatch]",{"range":"562","text":"563"},"Update the dependencies array to be: [dispatch, order, id, successPay, successDeliver, userInfo, navigate]",{"range":"564","text":"565"},"Update the dependencies array to be: [user, id, successUpdate, navigate, dispatch]",{"range":"566","text":"567"},{"range":"568","text":"563"},{"range":"569","text":"565"},{"range":"570","text":"567"},[1369,1388],"[success, navigate, cart.paymentMethod, order._id, dispatch]",[2387,2436],"[dispatch, order, id, successPay, successDeliver, userInfo, navigate]",[1436,1471],"[user, id, successUpdate, navigate, dispatch]",[1369,1388],[2387,2436],[1436,1471]]